{"version":3,"sources":["tic-tac-toe/index.js","tic-tac-toe/TicTacToe.js","tic-tac-toe/image.jpg","App.js","reportWebVitals.js","index.js"],"names":["TicTacToe","props","useStyles","makeStyles","root","maxWidth","media","height","GameItem","image","imageTitle","title","description","path","classes","history","useHistory","Card","elevation","CardActionArea","onClick","push","CardMedia","className","CardContent","Typography","gutterBottom","variant","component","color","HomePage","Grid","container","justify","alignItems","spacing","style","direction","games","map","e","item","id","TicTacToeImage","render","App","Fragment","CssBaseline","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"2SACeA,MCCA,SAAmBC,GAChC,OAAO,6CCHM,MAA0B,kCCqBnCC,EAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,KAEZC,MAAO,CACLC,OAAQ,OAGZ,SAASC,EAAT,GAAoE,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,YAAaC,EAAQ,EAARA,KACnDC,EAAUZ,IACVa,EAAUC,cAChB,OACE,cAACC,EAAA,EAAD,CAAMC,UAAW,EAAjB,SACE,eAACC,EAAA,EAAD,CACEC,QAAS,WACPL,EAAQM,KAAKR,IAFjB,UAKE,cAACS,EAAA,EAAD,CAAWC,UAAWT,EAAQR,MAAOG,MAAOA,EAAOE,MAAOD,IAC1D,eAACc,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAhD,SACGjB,IAEH,cAACc,EAAA,EAAD,CAAYE,QAAQ,QAAQE,MAAM,gBAAgBD,UAAU,IAA5D,SACGhB,YAOb,SAASkB,IACP,OACE,cAACC,EAAA,EAAD,CACEC,WAAS,EACTC,QAAQ,SACRC,WAAW,SACXC,QAAS,EACTC,MAAO,CAAE7B,OAAQ,QACjB8B,UAAU,SANZ,SAQGC,EAAMC,KAAI,SAACC,GAAD,OACT,cAACT,EAAA,EAAD,CAAMU,MAAI,EAAV,SACE,cAACjC,EAAD,eAAcgC,KADAA,EAAEE,SAO1B,IAAMJ,EAAQ,CACZ,CACEI,GAAI,cACJjC,MAAOkC,EACPhC,MAAO,cACPD,WAAY,cACZE,YAAa,kDACbC,KAAM,eACN+B,OAAQ,kBAAM,cAAC,EAAD,OAyBHC,MAtBf,WACE,OACE,eAAC,IAAMC,SAAP,WACE,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAW3C,SAAS,KAAK+B,MAAO,CAAE7B,OAAQ,SAA1C,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACG+B,EAAMC,KAAI,SAACC,GAAD,OACT,cAAC,IAAD,CAAkB3B,KAAM2B,EAAE3B,KAA1B,SACG2B,EAAEI,UADOJ,EAAEE,OAIhB,cAAC,IAAD,CAAO7B,KAAK,IAAZ,SACE,cAACiB,EAAD,iBClFCmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASd,OACP,cAAC,IAAMe,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.16fa2c38.chunk.js","sourcesContent":["import TicTacToe from \"./TicTacToe\";\r\nexport default TicTacToe;\r\n","import React from \"react\";\r\n\r\nexport default function TicTacToe(props) {\r\n  return <div>TicTacToe</div>;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/image.6eba67d7.jpg\";","import {\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  Container,\n  CssBaseline,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  useHistory,\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport TicTacToe from \"./tic-tac-toe\";\nimport TicTacToeImage from \"./tic-tac-toe/image.jpg\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 240,\n  },\n});\nfunction GameItem({ image, imageTitle, title, description, path }) {\n  const classes = useStyles();\n  const history = useHistory();\n  return (\n    <Card elevation={3}>\n      <CardActionArea\n        onClick={() => {\n          history.push(path);\n        }}\n      >\n        <CardMedia className={classes.media} image={image} title={imageTitle} />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {title}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {description}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\nfunction HomePage() {\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      spacing={4}\n      style={{ height: \"100%\" }}\n      direction=\"column\"\n    >\n      {games.map((e) => (\n        <Grid item key={e.id}>\n          <GameItem {...e} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\nconst games = [\n  {\n    id: \"tic-tac-toe\",\n    image: TicTacToeImage,\n    title: \"Tic-Tac-Toe\",\n    imageTitle: \"Tic-Tac-Toe\",\n    description: \"A Tic-Tac-Toe game with AI written by React JS.\",\n    path: \"/tic-tac-toe\",\n    render: () => <TicTacToe />,\n  },\n];\nfunction App() {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"sm\" style={{ height: \"100vh\" }}>\n        <Router>\n          <Switch>\n            {games.map((e) => (\n              <Route key={e.id} path={e.path}>\n                {e.render()}\n              </Route>\n            ))}\n            <Route path=\"/\">\n              <HomePage />\n            </Route>\n          </Switch>\n        </Router>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}